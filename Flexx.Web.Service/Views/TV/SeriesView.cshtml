@model Flexx.Media.Libraries.Series.SeriesModel
@{
    ViewData["Title"] = Model.Title;
}

<link rel="stylesheet" href="~/css/movieView.css" />
<link rel="stylesheet" href="~/css/Media.css" />
<style>
    body{
        background: url(@Model.CoverURL);
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: cover;
    }
</style>
@Html.PartialAsync("Library/_Nav").Result
<script>
    changeActiveNavItem(-1);
</script>
@if (Model.Seasons.ToList().Count == 1)
{
    <script>
        window.location.href = '/Library/TV/@Model.Title/Season/1/';
    </script>
}
<div id="overlay" class="shadowed-bg"></div>
<div id="movie">
    <div id="moviePoster" style="background: url( @Model.PosterURL );background-repeat: no-repeat;background-size: cover;">
        @*@if (Model.WatchedDuration > 0)
            {
                <div class="mediaPosterProgressIndicator_XL" style="width: @(Model.WatchPercentage*100)%;"></div>
            }
            <div id="actions">
                <ul class="center">
                    @if (Model.WatchedDuration > 0)
                    {
                        <li>
                            <div id="resumeBtn" onclick="window.location.href = '/Library/TV/@Model.Title/Watch'">Resume</div>
                        </li>
                        <li>
                            <div id="playBtn" onclick="window.location.href = '/Library/TV/@Model.Title/Watch/begin'">Start from Beginning</div>
                        </li>
                    }
                    else
                    {
                        <li>
                            <div id="playBtn" onclick="window.location.href = '/Library/TV/@Model.Title/Watch'">Play</div>
                        </li>

                    }
                </ul>
            </div>*@
    </div>
    <div id="overview">
        <div class="shadowed-bg"></div>
        <div id="movieTitle">@Model.Title</div>
        <div id="movieTitleSeperator"></div>
        <div id="movieSummery">@Model.Summery</div>
        <div id="movieExecutives">

            <div id="movieExecutivesSeperator"></div>
            <ul>
                @if (Model.Directors != null && Model.Directors.Count > 0)
                {
                    <li>
                        <div class="executiveTitle">Director</div>
                        <div class="executiveName">@Model.Directors[0].ActorName</div>
                    </li>
                }
                @if (Model.Writers != null && Model.Writers.Count > 0)
                {
                    @for (int i = 0; i < Model.Writers.Count; i++)
                    {
                        if (i >= 3) break;
                        <li>
                            <div class="executiveTitle">Writer</div>
                            <div class="executiveName">@Model.Writers[i].ActorName</div>
                        </li>
                    }
                }
            </ul>
        </div>
        <div id="movieStats">
            <div id="length">@Model.MediaDetails.Duration</div>
            @if (!string.IsNullOrWhiteSpace(Model.MPAARating))
            {
                <div id="rating">@Model.MPAARating</div><br>
            }
            @if (!string.IsNullOrWhiteSpace(Model.Language))
            {
                <div id="language">@Model.Language</div>
            }
            @if (Model.MediaDetails != null && Model.MediaDetails.Resolution != null && !string.IsNullOrWhiteSpace(Model.MediaDetails.Resolution.Display))
            {
                <div id="resolution">@Model.MediaDetails.Resolution.Display</div><br>
            }
            @if (Model.Genres != null && Model.Genres.Count > 0)
            {
                <div id="genres">
                    <ul>
                        @for (int i = 0; i < Model.Genres.Count; i++)
                        {
                            if (i >= 4) break;
                            if (i == Model.Genres.Count - 1 || i == 3)
                            {
                                <li>@Model.Genres[i]</li>
                            }
                            else
                            {
                                <li>@Model.Genres[i] ,</li>
                            }
                        }
                    </ul>
                </div>
            }
        </div>
        @if (Model.Actors != null && Model.Actors.Count > 0)
        {
            <div id="cast">
                <ul>
                    @for (int i = 0; i < Model.Actors.Count(); i++)
                    {
                        if (i >= 5) break;

                        <li>
                            <div class="castCard">
                                <img class="castImage" src="@Model.Actors[i].ProfilePictureURL" />
                                <div class="actorName">@Model.Actors[i].ActorName</div>
                                <div class="actorRole">@Model.Actors[i].CharacterName</div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        }
    </div>
</div>



<div class="SeasonListView">
    @foreach (var season in Model.Seasons.ToList())
    {
        string seasonNumber = season.Number >= 10 ? season.Number.ToString() : $"0{season.Number}";
        string cName = $"{Model.Title}_Season{seasonNumber}".Replace(" ", "");
        <div style="position: relative" data-season-name="Season @seasonNumber" class="mediaItem @cName" onclick="window.location.href = '/Library/TV/@Model.Title/Season/@season.Number/'">
            <img src="@season.PosterURL" />
            <div class="movieTitle">
                @season.Name
            </div>
        </div>
    }


    <script>
        Array.from(document.getElementsByClassName('mediaItem')).forEach(item => {
            item.addEventListener('mouseover', e => {
                document.querySelector('body').style.backgroundRepeat = "no-repeat"
                document.querySelector('body').style.backgroundSize = "cover"
                document.querySelector('body').style.backgroundAttachment = "fixed"
            })
        })


        window.addEventListener("contextmenu", event => {
            var ele = event.target.tagName == "IMG" ? event.target.parentElement : event.target;
            var isMediaObject = ele.classList.contains("mediaItem");
            if (isMediaObject) {
                var html = `
<div class="custom-cm__item" onclick="window.location.href='/Library/Movies/${ele.dataset.movieName}/Watch'">Play</div>
<div class="custom-cm__divider"></div>

<div class="custom-cm__item" onclick="$('#backgroundTasks').load('/api/streaming/movies/${ele.dataset.movieName}/save/watched/${ele.dataset.movieWatched != "True"}');
document.getElementById('${ele.id}').classList.toggle('unwatched');
document.getElementById('${ele.id}').dataset.movieWatched = !document.getElementById('${ele.id}').dataset.movieWatched;
">Mark as ${ele.dataset.movieWatched == 'True' ? "Unplayed" : "Played"}</div>
`;
                loadContextMenuItems(html);
            } else {
                loadDefaultContextMenu()
            }
        });
    </script>
</div>