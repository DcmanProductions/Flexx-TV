@model Flexx.Media.Libraries.Series.Season
@{
    ViewData["Title"] = Model.Series.Title;
    if (Model.Episodes.ToList().Count != 0)
    {
        Model.SortEpisodeByName();
    }
}

<link rel="stylesheet" href="~/css/movieView.css" />
<link rel="stylesheet" href="~/css/Media.css" />
<style>
    body{
        background: url(@Model.Series.CoverURL);
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: cover;
    }
</style>
@Html.PartialAsync("Library/_Nav").Result
<script>
    changeActiveNavItem(-1);
</script>
<div id="overlay" class="shadowed-bg"></div>
<div id="movie">
    <div id="moviePoster" style="background: url( @Model.PosterURL );background-repeat: no-repeat;background-size: cover;">
        @*<div id="actions">
                <ul class="center">
                    <li>
                        <div id="playBtn" onclick="window.location.href = '/Library/TV/@Model.Series.Title/Watch'">Play</div>
                    </li>
                </ul>
            </div>*@
    </div>
    <div id="overview">
        <div class="shadowed-bg"></div>
        <div id="movieTitle">@Model.Name</div>
        <div id="movieTitleSeperator"></div>
        <div id="movieSummery">@Model.Series.Summery</div>
    </div>
</div>


<div class="SeasonListView">
    @foreach (var episode in Model.Episodes.ToList())
    {
        string cName = (episode.Watched || episode.WatchedDuration > 0) ? "mediaItem tv" : "mediaItem tv unwatched";
        <div class="@cName" onclick="window.location.href = '/Library/TV/@Model.Series.Title/Season/@Model.Number/Episode/@episode.Number'">
            <img src="@episode.PosterURL" />
            @if (episode.WatchedDuration > 0)
            {
                <div class="mediaPosterProgressIndicator" style="width: @(episode.WatchPercentage*100)%;"></div>
            }
            <div class="movieTitle">
                @episode.Title
                <div class="movieYear">
                    @{
                        string name = $"Episode {(episode.Number >= 10 ? episode.Number.ToString() : $"0{episode.Number}")}";
                    }
                    @name
                </div>
            </div>
        </div>
    }


    <script>
        Array.from(document.getElementsByClassName('mediaItem')).forEach(item => {
            item.addEventListener('mouseover', e => {
                document.querySelector('body').style.backgroundRepeat = "no-repeat"
                document.querySelector('body').style.backgroundSize = "cover"
                document.querySelector('body').style.backgroundAttachment = "fixed"
            })
        })


        window.addEventListener("contextmenu", event => {
            var ele = event.target.tagName == "IMG" ? event.target.parentElement : event.target;
            var isMediaObject = ele.classList.contains("mediaItem");
            if (isMediaObject) {
                var html = `
<div class="custom-cm__item" onclick="window.location.href='/Library/Movies/${ele.dataset.movieName}/Watch'">Play</div>
<div class="custom-cm__divider"></div>

<div class="custom-cm__item" onclick="$('#backgroundTasks').load('/api/streaming/movies/${ele.dataset.movieName}/save/watched/${ele.dataset.movieWatched != "True"}');
document.getElementById('${ele.id}').classList.toggle('unwatched');
document.getElementById('${ele.id}').dataset.movieWatched = !document.getElementById('${ele.id}').dataset.movieWatched;
">Mark as ${ele.dataset.movieWatched == 'True' ? "Unplayed" : "Played"}</div>
`;
                loadContextMenuItems(html);
            } else {
                loadDefaultContextMenu()
            }
        });
    </script>
</div>


@*
    <ul>
        @foreach (var episode in Model.Episodes.ToList())
        {
            string cName = (episode.Watched || episode.WatchedDuration > 0) ? "mediaItem tv" : "mediaItem tv unwatched";
            <li>
                <div style="position: relative" class="@cName" onclick="window.location.href = '/Library/TV/@Model.Series.Title/Season/@Model.Number/Episode/@episode.Number'">
                    <img src="@episode.PosterURL" />
                    @if (episode.WatchedDuration > 0)
                    {
                        <div class="mediaPosterProgressIndicator" style="width: @(episode.WatchPercentage*100)%;"></div>
                    }
                    <div class="movieTitle">
                        @episode.Title
                        <div class="movieYear">
                            @{
                                string name = $"Episode {(episode.Number >= 10 ? episode.Number.ToString() : $"0{episode.Number}")}";
                            }
                            @name
                        </div>
                    </div>
                </div>
            </li>
        }
    </ul>*@