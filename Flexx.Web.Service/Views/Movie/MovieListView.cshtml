
<ul>
    @foreach (var movie in Flexx.Media.Libraries.LibraryListModel.Singleton.Movies.Movies.ToList())
    {
        string cName = (movie.Watched || movie.WatchedDuration > 0) ? "mediaItem" : "mediaItem unwatched";
        <li>
            <div style="position: relative" data-movie-name="@movie.Title.Replace(" ", "%20")" data-movie-percentage="@movie.WatchPercentage" id="@movie.TMDBID" data-movie-watched=@movie.Watched class="@cName" onmouseover="document.querySelector('body').style.background = 'url(@movie.CoverURL)'" onclick="window.location.href = '/Library/Movies/@movie.Title'">
                @if (movie.WatchedDuration > 0)
                {
                    <div class="mediaPosterProgressIndicator" style="width: @(movie.WatchPercentage*100)%;"></div>
                }
                <img src="@movie.PosterURL" />
                <div class="movieTitle">
                    @movie.Title
                    <div class="movieYear">
                        @movie.Year
                    </div>
                </div>
            </div>
        </li>
    }
</ul>


<script>
    Array.from(document.getElementsByClassName('mediaItem')).forEach(item => {
        item.addEventListener('mouseover', e => {
            document.querySelector('body').style.backgroundRepeat = "no-repeat"
            document.querySelector('body').style.backgroundSize = "cover"
            document.querySelector('body').style.backgroundAttachment = "fixed"
        })
    })


    window.addEventListener("contextmenu", event => {
        var ele = event.target.tagName == "IMG" ? event.target.parentElement : event.target;
        var isMediaObject = ele.classList.contains("mediaItem");
        if (isMediaObject) {
            var html = `
<div class="custom-cm__item" onclick="window.location.href='/Library/Movies/${ele.dataset.movieName}/Watch'">Play</div>
<div class="custom-cm__divider"></div>

<div class="custom-cm__item" onclick="$('#backgroundTasks').load('/api/streaming/movies/${ele.dataset.movieName}/save/watched/${ele.dataset.movieWatched != "True"}');
document.getElementById('${ele.id}').classList.toggle('unwatched');
document.getElementById('${ele.id}').dataset.movieWatched = !document.getElementById('${ele.id}').dataset.movieWatched;
">Mark as ${ele.dataset.movieWatched == 'True' ? "Unplayed" : "Played"}</div>
`;
            loadContextMenuItems(html);
        } else {
            loadDefaultContextMenu()
        }
    });
</script>




@*<script>
            var lazyloadImages;

            if ("IntersectionObserver" in window) {
                lazyloadImages = document.querySelectorAll(".lazy");
                var imageObserver = new IntersectionObserver(function (entries, observer) {
                    entries.forEach(function (entry) {
                        if (entry.isIntersecting) {
                            var image = entry.target;
                            image.src = image.dataset.src;
                            image.classList.remove("lazy");
                            imageObserver.unobserve(image);
                        }
                    });
                });

                lazyloadImages.forEach(function (image) {
                    imageObserver.observe(image);
                });
            } else {
                var lazyloadThrottleTimeout;
                lazyloadImages = document.querySelectorAll(".lazy");

                function lazyload() {
                    if (lazyloadThrottleTimeout) {
                        clearTimeout(lazyloadThrottleTimeout);
                    }

                    lazyloadThrottleTimeout = setTimeout(function () {
                        var scrollTop = window.pageYOffset;
                        lazyloadImages.forEach(function (img) {
                            if (img.offsetTop < (window.innerHeight + scrollTop)) {
                                img.src = img.dataset.src;
                                img.classList.remove('lazy');
                            }
                        });
                        if (lazyloadImages.length == 0) {
                            document.removeEventListener("scroll", lazyload);
                            window.removeEventListener("resize", lazyload);
                            window.removeEventListener("orientationChange", lazyload);
                        }
                    }, 20);
                }

                document.addEventListener("scroll", lazyload);
                window.addEventListener("resize", lazyload);
                window.addEventListener("orientationChange", lazyload);
            }
    </script>*@