@model Flexx.Media.Libraries.Movies.MovieModel
@{
    bool isTrailer = bool.Parse(ViewData["trailer"].ToString());
    string extra = isTrailer ? "trailer" : Model.Year.ToString();
    string src = isTrailer ? Model.DirectVideoTrailer : $"/api/streaming/{Model.Library.Name}/{Model.Title}/direct";
}

<link rel="stylesheet" href="/css/video.css">
<div id="video">
    <div id="videoOverlay" class="overlayActive">
        <div id="overlayBG"></div>
        <div id="nonActiveArea"></div>
        <div id="videoTitle">
            @Model.Title
            <div id="videoYear">@extra</div>
        </div>
        <div id="closeBtn" onclick="window.location.href = '/Library/Movies/@Model.Title'">
            <img src="/images/svg/Close.svg" alt="">
        </div>
        <div id="Navigation">
            <div id="progress">
                <div id="video-progress-completed"></div>
            </div>

            <div id="settings">
                <img src="/images/svg/sliders-h-solid.svg" alt="">
            </div>
            <div id="controls">
                <ul>
                    <li style="display:none;">
                        <div id="backward">
                            <img src="/images/svg/fast-backward-solid.svg" alt="">
                        </div>
                    </li>
                    <li>
                        <div id="skipBackward">
                            <img src="/images/svg/step-backward-solid.svg" alt="">
                        </div>
                    </li>
                    <li>
                        <div id="play">
                            <img class="playBtn" src="/images/svg/play-solid.svg" alt="">
                        </div>
                    </li>
                    <li>
                        <div id="skipForward">
                            <img src="/images/svg/step-forward-solid.svg" alt="">
                        </div>
                    </li>
                    <li style="display:none;">
                        <div id="forward">
                            <img src="/images/svg/fast-forward-solid.svg" alt="">
                        </div>
                    </li>
                    <li id="volumeListItem">
                        <div id="volume">
                            <div id="volume-progress-completed"></div>
                        </div>
                    </li>
                </ul>
            </div>
            <div id="timestamp">
                <div id="currentTime">00:00</div>
                <div id="timeStampSeperator"></div>
                <div id="totalTime">00:00</div>
                <div id="timeStampSeperator"></div>
                <div id="endTime">00:00</div>
            </div>
            <div id="fullscreenBtn">
                <img src="/images/svg/expand-solid.svg" alt="">
            </div>
        </div>
    </div>
    <video src="@src" autoplay></video>
</div>
<script src="/js/video.js"></script>
<script>
        video.addEventListener("ended", () => {
            window.location.href = '/Library/Movies/@Model.Title';
        });
</script>
@if (!isTrailer)
{
    <script>
    setInterval(() => {
        if (Math.floor((video.currentTime / video.duration) * 100) > 90) {
            $("#backgroundTasks").load(`/api/streaming/@Model.Library.Name.Replace(" ", "%20")/@Model.Title.Replace(" ", "%20")/save/watched/true`)
            $("#backgroundTasks").load(`/api/streaming/@Model.Library.Name.Replace(" ", "%20")/@Model.Title.Replace(" ", "%20")/save/duration/0`)
        } else {
            $("#backgroundTasks").load(`/api/streaming/@Model.Library.Name.Replace(" ", "%20")/@Model.Title.Replace(" ", "%20")/save/duration/${Math.floor(video.currentTime)}`)
        }
            }, 1000)
    </script>
    @if (Model.WatchedDuration > 0)
    {
        <script>
        video.currentTime = @Model.WatchedDuration;
        </script>
    }

    <div id="backgroundTasks" style="display:none"></div>
}